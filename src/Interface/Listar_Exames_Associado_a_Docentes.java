/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import java.util.ArrayList;
import projeto.*;

/**
 * Esta Classe serve para Listar os Exames Associados a um Docente.
 * @author Asus
 */
public class Listar_Exames_Associado_a_Docentes extends javax.swing.JInternalFrame {
    
    private final ArrayList<Exame> exames;
    private final ArrayList<Curso> cursos;
    private ArrayList<Docente> docentes;
    
    private int index;
    /**
     * Creates new form Listar_Exames_Associado_a_Docentes
     * @param cursos
     * @param exames
     */
    public Listar_Exames_Associado_a_Docentes(ArrayList<Curso> cursos, ArrayList<Exame> exames) {
        initComponents();
        this.exames = exames;
        this.cursos = cursos;
        this.index = -1;
        this.docentes = new ArrayList<>();
        cursos.stream().forEach((Curso cs) -> {
            cs.getDisciplinas().stream().forEach((Disciplina dis) -> {
                dis.get_Docentes().stream().forEach((Docente doc) -> {
                    int v = 0;
                    v = docentes.stream().filter((auxdoc) -> (auxdoc.getNum() == doc.getNum())).map((_item) -> 1).reduce(v, Integer::sum);
                    if (v == 0) {
                        Listar_Exames_Associado_a_Docentes.this.docentes.add(doc);
                    }
                });
            });
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox_docentes = new javax.swing.JComboBox<>();
        jLabel_curso1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setClosable(true);
        setPreferredSize(new java.awt.Dimension(610, 500));
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jComboBox_docentes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escolha" }));
        jComboBox_docentes.setAutoscrolls(true);
        jComboBox_docentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_docentesActionPerformed(evt);
            }
        });

        jLabel_curso1.setText("Docente");

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextArea1.setEnabled(false);
        jTextArea1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTextArea1MouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel_curso1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox_docentes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox_docentes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_curso1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox_docentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_docentesActionPerformed
        // TODO add your handling code here:
        if (jComboBox_docentes.getItemCount()<1){
            jComboBox_docentes.removeAllItems();
            for (int i = 0; i < docentes.size(); i++) {
                jComboBox_docentes.addItem(docentes.get(i).getNome()+ " ("+docentes.get(i).getNum()+")");
            } 
        }
        else{
            if (jComboBox_docentes.getSelectedIndex()!= index){
                jTextArea1.setText(null);
                this.index = jComboBox_docentes.getSelectedIndex();
                jTextArea1.append("Lista de Exames do Docente "+ docentes.get(index).getNome() +"\n\n");
                exames.stream().forEach((Exame exame) -> {
                    exame.getVigilantes().stream().filter((doc) -> (doc.getNum()==docentes.get(index).getNum())).map((_item) -> {
                        jTextArea1.append(exame.toString());
                        return _item;
                    }).forEach((Docente _item) -> {
                        jTextArea1.append("\n----------------------\n");
                    });
                });
            }
        }
    }//GEN-LAST:event_jComboBox_docentesActionPerformed

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        // TODO add your handling code here:
        jComboBox_docentes.removeAllItems();
    }//GEN-LAST:event_formAncestorAdded

    private void jTextArea1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea1MouseEntered
        // TODO add your handling code here: 
    }//GEN-LAST:event_jTextArea1MouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jComboBox_docentes;
    private javax.swing.JLabel jLabel_curso1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
