/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import projeto.*;

/**
 * Esta Classe serve para Atribuir as Notas aos respectivos Alunos de um Exame.
 * @author Asus
 */
public class Lanca_notas extends javax.swing.JInternalFrame {
    
    DefaultTableModel model;
    
    private final ArrayList<Exame> exames;
    private Exame exame;
    private int index;
    /**
     * Creates new form Lança_notas
     * @param Exames
     */
    public Lanca_notas(ArrayList<Exame> Exames) {
        initComponents();
        this.exames = new ArrayList<>();
        this.index = -1;
        this.model = (DefaultTableModel) jTable1.getModel();
        
        Exames.stream().filter((exame) -> ( exame.getClassificacoes().size() < 1)).forEach((exame) -> {
            this.exames.add(exame);
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jComboBox_exames = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButton_vali = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel_aviso = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        setClosable(true);
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jComboBox_exames.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox_exames.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_examesActionPerformed(evt);
            }
        });

        jLabel1.setText("Exame");

        jButton_vali.setText("Validar");
        jButton_vali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_valiActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Número", "Classificação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jTable1MouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel_aviso.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel_aviso)
                        .addGap(146, 146, 146)
                        .addComponent(jButton_vali))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox_exames, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox_exames, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_vali)
                    .addComponent(jLabel_aviso))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        // TODO add your handling code here:
        jComboBox_exames.removeAllItems();
    }//GEN-LAST:event_formAncestorAdded

    private void jComboBox_examesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_examesActionPerformed
        // TODO add your handling code here:
        if (jComboBox_exames.getItemCount()<1){
            jComboBox_exames.removeAllItems();
            for (Exame exame : exames) {
                jComboBox_exames.addItem(exame.getDisciplina().getNome()+ " ("+exame.getData().toString()+")");
            }
        }
        else{
            if (index != jComboBox_exames.getSelectedIndex()){
                this.index = jComboBox_exames.getSelectedIndex();
                this.exame = exames.get(index);

               

                for (int i = 0; i < exame.getInscritos().size(); i++) {
                    model.addRow(new Object[]{});
                    model.setValueAt(exame.getInscritos().get(i).getNome(), i , 0);
                    model.setValueAt(exame.getInscritos().get(i).getNum(), i , 1);
                }
            }
        }
    }//GEN-LAST:event_jComboBox_examesActionPerformed

    private void jTable1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseEntered

    private void jButton_valiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_valiActionPerformed
        // TODO add your handling code here:
        int v = 0;
        for (int i = 0; i < exame.getInscritos().size(); i++) {
                Double d = (Double) jTable1.getModel().getValueAt(i, 2);
                System.out.println(d);
                if (d==null || d<0 || d>20){
                    v++;
                }
            }
        if ( v==0){
            for (int i = 0; i < exame.getInscritos().size(); i++) {
                Double d = (Double) jTable1.getModel().getValueAt(i, 2);
                exame.getClassificacoes().add(d);
            }
            setVisible(false);
            Ficheiros_obj obj = new Ficheiros_obj();     
            try {
                obj.write_exames(exames);
            } catch (IOException ex) {
                Logger.getLogger(Lanca_notas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else jLabel_aviso.setText("Classificações invalidas!");
    }//GEN-LAST:event_jButton_valiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_vali;
    private javax.swing.JComboBox<String> jComboBox_exames;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel_aviso;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
